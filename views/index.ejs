<!DOCTYPE html>
<html lan='eng'>

<head>

    <meta charset='UTF-8'>
    <title>PhotoGpt</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500&display=swap" rel="stylesheet">
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .bg-white {
            margin-top: -10rem;
            font-family: 'poppins', sans-serif;
        }

        @media (min-width: 640px) {
            .bg-white {
                margin-top: -16rem;
                font-family: 'poppins', sans-serif;
            }
        }

        #inputbox {
            width: 95%;
            height: 5rem;
            border: solid 2px white;
            border-radius: 1rem;
            background-color: whitesmoke;
            outline: none;

        }

        #inputbox:hover {
            border-color: #4F46E5;
        }

        #chatBox {
            display: flex;

        }

        #imgx {
            width: 50px;
            height: 50px;
            align-self: center;
            /* flex-shrink: 0;
            flex-grow: 0; */
            /* object-fit: cover; */
            cursor: pointer;
        }

        #imgx:active {
            width: 45px;
            height: 45px;
        }

        #mssgbox {
            width: 100%;
            height: 4rem;
        }
    </style>

</head>

<body>

    <div class="bg-white">

        <div class="relative isolate px-5 pt-14 lg:px-8">
            <div class="absolute inset-x-0 -top-40 -z-10 transform-gpu overflow-hidden blur-3xl sm:-top-80"
                aria-hidden="true">
                <div class="relative left-[calc(50%-11rem)] aspect-[1155/678] w-[36.125rem] -translate-x-1/2 rotate-[30deg] bg-gradient-to-tr from-[#ff80b5] to-[#9089fc] opacity-30 sm:left-[calc(50%-30rem)] sm:w-[72.1875rem]"
                    style="clip-path: polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)">
                </div>
            </div>
            <div class="mx-auto max-w-2xl py-32 sm:py-48 lg:py-56">
                <div class="hidden sm:mb-8 sm:flex sm:justify-center">

                </div>
                <div class="text-center">

                    <h1 class="text-4xl font-bold tracking-tight text-indigo-600 sm:text-6xl">PhotoðŸ“¸Gpt</h1>
                    <br>
                    <br>
                    <br>


                    <div style="border: solid 2.5px #4F46E5;border-radius: 0.5rem;">
                        <div class="read flex justify-start">
                            <button
                                class="rounded-md bg-indigo-600 px-2 py-1 text-sm font-semibold text-white shadow-sm  focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">
                                <img width="20" height="20"
                                    src="https://img.icons8.com/ios-glyphs/30/FFFFFF/play--v1.png" alt="play--v1"
                                    id="ImgIcon" />
                            </button>

                        </div>

                        <p class="mt-6 text-lg leading-8 text-gray-600" style="font-size: 1.4rem;margin-top: -0px;"
                            id="word">
                            <%= locals.text %>

                        </p>
                    </div>

                    <div class="mt-10 flex items-center justify-center gap-x-6">
                        <a href=""
                            class="rounded-md bg-indigo-600 px-3.5 py-3.5 text-sm font-semibold text-white shadow-sm hover:bg-indigo-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">Regenerate
                            summery</a>

                    </div>
                </div>

                <br>
                <br>
                <br>

                <main>

                </main>
                <br>
                <br>

                <div id="chatBox">

                    <input type="text" id="inputbox" placeholder="  Ask anything about your summery " on>
                    <img src="https://img.icons8.com/ios-glyphs/60/4f46e5/send-letter.png" alt="send-letter" id="imgx"
                        onclick="sendm()" />
                </div>


                <div class="absolute inset-x-0 top-[calc(100%-13rem)] -z-10 transform-gpu overflow-hidden blur-3xl sm:top-[calc(100%-30rem)]"
                    aria-hidden="true">
                    <div class="relative left-[calc(50%+3rem)] aspect-[1155/678] w-[36.125rem] -translate-x-1/2 bg-gradient-to-tr from-[#ff80b5] to-[#9089fc] opacity-30 sm:left-[calc(50%+36rem)] sm:w-[72.1875rem]"
                        style="clip-path: polygon(74.1% 44.1%, 100% 61.6%, 97.5% 26.9%, 85.5% 0.1%, 80.7% 2%, 72.5% 32.5%, 60.2% 62.4%, 52.4% 68.1%, 47.5% 58.3%, 45.2% 34.5%, 27.5% 76.7%, 0.1% 64.9%, 17.9% 100%, 27.6% 76.8%, 76.1% 97.7%, 74.1% 44.1%)">
                    </div>
                </div>
            </div>
        </div>



        <script>
            let c = 0;
            let text = `<%= locals.text %>`;
            let key = `<%=locals.key%>`;

            document.getElementById('inputbox').addEventListener('keypress', function (e) {
                if (e.key === 'Enter') {
                   sendm();
                }
            });

            async function sendm() {

                let inputbox = document.querySelector("#inputbox").value;
                let main = document.querySelector("main");
                let br = document.createElement("br");


                // Create div elements
                let div1 = document.createElement('div');
                div1.className = 'flex flex-col space-y-4';

                let div4 = document.createElement('div');
                div4.className = 'flex items-start justify-end space-x-2';

                let div5 = document.createElement('div');
                div5.className = 'px-4 py-2 rounded-lg bg-indigo-600 text-white';

                let p2 = document.createElement('p');
                p2.className = 'text-sm';
                p2.textContent = `${inputbox}`;
                p2.style.fontSize = "1.2rem";

                div5.appendChild(p2);
                div4.appendChild(div5);
                div1.appendChild(br);
                div1.appendChild(div4);
                main.appendChild(div1);


                document.querySelector("#inputbox").value = " "



                const response = await fetch('https://api.openai.com/v1/chat/completions', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'Authorization': `Bearer ${key}`,
                    },
                    body: JSON.stringify({
                        model: "gpt-3.5-turbo-1106",
                        messages: [
                            { role: "system", content: "You are a helpful assistant." },
                            { role: "user", content: `${text}` + inputbox },
                        ],
                    }),
                });

                const data = await response.json();
                console.log(data.choices[0].message.content);


                console.log(data);
                let mainai = document.querySelector("main");
                // Create div elements
                let div1ai = document.createElement('div');
                div1.className = 'flex flex-col space-y-4';

                let div2 = document.createElement('div');
                div2.className = 'flex items-end space-x-2';

                let div3 = document.createElement('div');
                div3.className = 'px-6 py-4 rounded-lg bg-gray-200 dark:bg-gray-800 text-white';

                let p1 = document.createElement('p');
                p1.className = 'text-lg';
                p1.textContent = `${data.choices[0].message.content}`;
                p1.style.fontSize = "1.2rem";
                p2.style.lineHeight = "1.7rem";


                div3.appendChild(p1);
                div2.appendChild(div3);
                div1.appendChild(div2);
                main.appendChild(div1);


            }


            document.querySelector("#ImgIcon").addEventListener("click", async () => {
                if (c == 0) {
                    document.querySelector("#ImgIcon").setAttribute("src", "https://img.icons8.com/ios-glyphs/30/FFFFFF/pause--v1.png");
                    const speech = await new SpeechSynthesisUtterance(text);
                    speech.lang = "en-US";
                    window.speechSynthesis.speak(speech);
                    speech.onboundary = (event) => {
                        const charIndex = event.charIndex;
                        const charLength = event.charLength;
                        const spokenWord = text.substring(charIndex, charIndex + charLength);
                        const pTagContent = document.querySelector("p").textContent;
                        const highlightedText = pTagContent.replace(spokenWord, `<span style="background-color: #4F46E5;color:white">${spokenWord}</span>`);
                        document.querySelector("p").innerHTML = highlightedText;
                    };
                    c++;

                } else {
                    document.querySelector("#ImgIcon").setAttribute("src", "https://img.icons8.com/ios-glyphs/30/FFFFFF/play--v1.png");
                    window.speechSynthesis.cancel();
                    c = 0;
                }
            })

        </script>


</body>

</html>